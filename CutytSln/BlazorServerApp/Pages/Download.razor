@page "/download"

@using BlazorServerApp.Data
@using Cutyt.Core.Classes
@using System.Web
@using Cutyt.Core.Extensions
@using Cutyt.Core.Rebus.Replies
@using CutytKendoWeb.Models
@using System.Text.Json

@inject WatchService WatchService
@inject NavigationManager navManager


@if (vm == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="text-center">
        <a rel="noreferrer" id="aDownload" href="@($"https://localhost:7276/mediaplayer?url={vm.Url.Base64StringEncode()}")" target="_blank">DownloadFile</a>
    </div>
    @*<video controls>
        <source src="@vm.Url">
        Your browser does not support the video tag.
        </video>*@
}

@code {
    YoutubeDownloadedFileInfo? vm = null;

    [Parameter]
    [SupplyParameterFromQuery(Name = "V")]
    public string V { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "ytUrl")]
    public string YtUrl { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "selectedOption")]
    public string SelectedOption { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "start")]
    public double Start { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "end")]
    public double End { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "downloadSwitchAudioAndVideo")]
    public double DownloadSwitchAudioAndVideo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var sr = ShouldRender();
        if (firstRender)
        {
            PostDataDownloadLinkViewModel postDataDownloadLinkViewModel = new PostDataDownloadLinkViewModel()
                {
                    SelectedOption = SelectedOption,
                    Start = Start,
                    End = End,
                    YtUrl = YtUrl,
                    ShouldTrim = true,
                    V = V,
                };


          

            vm = await WatchService.GetDownloadLink(postDataDownloadLinkViewModel);
            firstRender = false;
        }
    }

    bool firstRender = true;
}
